// Place your key bindings in this file to override the defaultsauto[]
[
  // Navigation
  // Down Motion
  {
    "key": "ctrl+j",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  // Up Motion
  {
    "key": "ctrl+k",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  // move lines up and down
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // select next and previous occurrence
  // Toggle Terminal
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+w",
    "command": "-expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-undo_expand_region",
    "when": "editorHasSelection && editorTextFocus"
  },
  // Select next occurrence
  {
    "key": "alt+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  // Select all occurrences
  {
    "key": "ctrl+alt+j",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  // tab navigation
  {
    "key": "tab",
    "command": "workbench.action.nextEditorInGroup",
    "when": "!sideBarFocus && !terminalFocus && vim.mode != 'Insert' && neovim.mode != insert"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.previousEditorInGroup",
    "when": "!sideBarFocus && !terminalFocus && vim.mode != 'Insert' && neovim.mode != insert"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "shift+ctrl+tab",
    "command": "workbench.action.previousSideBarView",
    "when": "sideBarFocus"
  },
  // close editor - not working
  {
    "key": "shift+q",
    "command": "workbench.action.closeActiveEditor",
    "when": "!inputFocus && neovim.mode != insert"
  },
  // ? buffer navigation
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && neovim.mode != insert"
    // "when": "editorTextFocus && vim.mode == 'Normal' && activeEditorGroupIndex != 1"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    // jump to explorer
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    // "command": "workbench.files.action.focusFilesExplorer",
    "when": "sideBarVisible && editorTextFocus && neovim.mode != insert && activeEditorGroupIndex == 1"
  },
  {
    // jump from explorer to text editor
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus && !inputFocus"
  },
  // code actions
  // {
  //   "key": "space c a",
  //   "command": "editor.action.codeAction",
  //   "when": "neovim.mode == normal && editorTextFocus"
  // },
  // {
  //   "key": "ctrl+shift+\\",
  //   "command": "workbench.action.terminal.newWithCwd",
  //   "args": {
  //     "cwd": "${fileDirname}"
  //   }
  // },
  // ? File Explorer
  {
    "key": "ctrl+e",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "editorTextFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "shift-a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && !inputFocus && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  // ? scroll
  {
    "key": "ctrl+u",
    "command": "-vscode-neovim.ctrl-u"
  },
  {
    "key": "ctrl+d",
    "command": "-vscode-neovim.ctrl-d"
  },
  {
    "key": "ctrl+u",
    "command": "runCommands",
    "when": "editorFocus",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "up",
            "by": "halfPage"
          }
        },
        {
          "command": "cursorMove",
          "args": { "to": "up", "by": "wrappedLine", "value": 20 }
        }
      ]
    }
  },
  {
    "key": "ctrl+d",
    "command": "runCommands",
    "when": "editorFocus && neovime.mode != insert",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "down",
            "by": "halfPage"
          }
        },
        {
          "command": "cursorMove",
          "args": { "to": "down", "by": "wrappedLine", "value": 20 }
        }
      ]
    }
  },
  {
    "key": "ctrl+b",
    "command": "runCommands",
    "when": "editorFocus && neovim.mode != insert",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "up",
            "by": "page"
          }
        },
        {
          "command": "cursorMove",
          "args": {
            "to": "viewPortCenter"
          }
        }
      ]
    }
  },
  {
    "key": "ctrl+f",
    "command": "runCommands",
    "when": "editorFocus && neovim.mode != insert",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "down",
            "by": "page"
          }
        },
        {
          "command": "cursorMove",
          "args": {
            "to": "viewPortCenter"
          }
        }
      ]
    }
  },
  // ? disable find and replace shortcuts
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+/",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal./ && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+/",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert./ && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "tab",
    "command": "-togglePeekWidgetFocus",
    "when": "referenceSearchVisible || inReferenceSearchEditor && neovim.mode == 'normal'"
  },
  {
    "key": "tab",
    "command": "-vscode-neovim.send-cmdline",
    "when": "neovim.init && neovim.mode == 'cmdline'"
  },
  {
    "key": "tab",
    "command": "-vscode-neovim.send",
    "when": "neovim.init && neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  }
]
